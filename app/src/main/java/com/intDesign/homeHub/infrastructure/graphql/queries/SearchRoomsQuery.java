// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.queries;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.intDesign.homeHub.infrastructure.graphql.types.OrderedRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.PagedRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.RoomFilteredRequestType;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class SearchRoomsQuery implements Query<SearchRoomsQuery.Data, SearchRoomsQuery.Data, SearchRoomsQuery.Variables> {
    public static final String OPERATION_ID = "1dcc251782fa1f6dd6f7dfdfc6e5c726ff658ba6e0b34b7f22cb9f35ae20ffe4";

    public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
            "query searchRooms($pagination: PagedRequestType!, $ordering: OrderedRequestType!, $filter: RoomFilteredRequestType) {\n"
                    + "  room {\n"
                    + "    __typename\n"
                    + "    search(pagination: $pagination, ordering: $ordering, filter: $filter) {\n"
                    + "      __typename\n"
                    + "      items {\n"
                    + "        __typename\n"
                    + "        id\n"
                    + "        houseId\n"
                    + "        afm\n"
                    + "        asp\n"
                    + "        atv\n"
                    + "        customHeightOne\n"
                    + "        customHeightTwo\n"
                    + "        customLenght\n"
                    + "        customWidth\n"
                    + "        emptyAsp\n"
                    + "        height\n"
                    + "        lenght\n"
                    + "        pc\n"
                    + "        specialAfm\n"
                    + "        specialTilesParquetCoefficient\n"
                    + "        tilesParquetCoefficient\n"
                    + "        type\n"
                    + "        wallRealCoefficient\n"
                    + "        width\n"
                    + "      }\n"
                    + "    }\n"
                    + "  }\n"
                    + "}"
    );

    public static final OperationName OPERATION_NAME = () -> "searchRooms";

    private final SearchRoomsQuery.Variables variables;

    public SearchRoomsQuery(@NotNull PagedRequestType pagination,
                            @NotNull OrderedRequestType ordering, @NotNull Input<RoomFilteredRequestType> filter) {
        Utils.checkNotNull(pagination, "pagination == null");
        Utils.checkNotNull(ordering, "ordering == null");
        Utils.checkNotNull(filter, "filter == null");
        variables = new SearchRoomsQuery.Variables(pagination, ordering, filter);
    }

    @NotNull
    @Override
    public String operationId() {
        return OPERATION_ID;
    }

    @Override
    public String queryDocument() {
        return QUERY_DOCUMENT;
    }

    @Override
    public SearchRoomsQuery.Data wrapData(SearchRoomsQuery.Data data) {
        return data;
    }

    @Override
    public SearchRoomsQuery.Variables variables() {
        return variables;
    }

    @Override
    public ResponseFieldMapper<SearchRoomsQuery.Data> responseFieldMapper() {
        return new Data.Mapper();
    }

    public static Builder builder() {
        return new Builder();
    }

    @NotNull
    @Override
    public OperationName name() {
        return OPERATION_NAME;
    }

    public static final class Builder {
        private @NotNull
        PagedRequestType pagination;

        private @NotNull
        OrderedRequestType ordering;

        private Input<RoomFilteredRequestType> filter = Input.absent();

        Builder() {
        }

        public Builder pagination(@NotNull PagedRequestType pagination) {
            this.pagination = pagination;
            return this;
        }

        public Builder ordering(@NotNull OrderedRequestType ordering) {
            this.ordering = ordering;
            return this;
        }

        public Builder filter(@Nullable RoomFilteredRequestType filter) {
            this.filter = Input.fromNullable(filter);
            return this;
        }

        public Builder filterInput(@NotNull Input<RoomFilteredRequestType> filter) {
            this.filter = Utils.checkNotNull(filter, "filter == null");
            return this;
        }

        public SearchRoomsQuery build() {
            Utils.checkNotNull(pagination, "pagination == null");
            Utils.checkNotNull(ordering, "ordering == null");
            return new SearchRoomsQuery(pagination, ordering, filter);
        }
    }

    public static final class Variables extends Operation.Variables {
        private final @NotNull
        PagedRequestType pagination;

        private final @NotNull
        OrderedRequestType ordering;

        private final Input<RoomFilteredRequestType> filter;

        private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

        Variables(@NotNull PagedRequestType pagination, @NotNull OrderedRequestType ordering,
                  Input<RoomFilteredRequestType> filter) {
            this.pagination = pagination;
            this.ordering = ordering;
            this.filter = filter;
            this.valueMap.put("pagination", pagination);
            this.valueMap.put("ordering", ordering);
            if (filter.defined) {
                this.valueMap.put("filter", filter.value);
            }
        }

        public @NotNull
        PagedRequestType pagination() {
            return pagination;
        }

        public @NotNull
        OrderedRequestType ordering() {
            return ordering;
        }

        public Input<RoomFilteredRequestType> filter() {
            return filter;
        }

        @NotNull
        @Override
        public Map<String, Object> valueMap() {
            return Collections.unmodifiableMap(valueMap);
        }

        @Override
        public InputFieldMarshaller marshaller() {
            return writer -> {
                writer.writeObject("pagination", pagination.marshaller());
                writer.writeObject("ordering", ordering.marshaller());
                if (filter.defined) {
                    writer.writeObject("filter", filter.value != null ? filter.value.marshaller() : null);
                }
            };
        }
    }

    public static class Data implements Operation.Data {
        static final ResponseField[] $responseFields = {
                ResponseField.forObject("room", "room", null, true, Collections.emptyList())
        };

        final @Nullable
        Room room;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Data(@Nullable Room room) {
            this.room = room;
        }

        public @Nullable
        Room room() {
            return this.room;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> writer.writeObject($responseFields[0], room != null ? room.marshaller() : null);
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Data{"
                        + "room=" + room
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Data) {
                Data that = (Data) o;
                return ((this.room == null) ? (that.room == null) : this.room.equals(that.room));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= (room == null) ? 0 : room.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Data> {
            final Room.Mapper roomFieldMapper = new Room.Mapper();

            @Override
            public Data map(ResponseReader reader) {
                final Room room = reader.readObject($responseFields[0], roomFieldMapper::map);
                return new Data(room);
            }
        }
    }

    public static class Room {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forObject("search", "search", new UnmodifiableMapBuilder<String, Object>(3)
                        .put("pagination", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "pagination")
                                .build())
                        .put("ordering", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "ordering")
                                .build())
                        .put("filter", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "filter")
                                .build())
                        .build(), true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        Search search;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Room(@NotNull String __typename, @Nullable Search search) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.search = search;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        public @Nullable
        Search search() {
            return this.search;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeObject($responseFields[1], search != null ? search.marshaller() : null);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Room{"
                        + "__typename=" + __typename + ", "
                        + "search=" + search
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Room) {
                Room that = (Room) o;
                return this.__typename.equals(that.__typename)
                        && ((this.search == null) ? (that.search == null) : this.search.equals(that.search));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (search == null) ? 0 : search.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Room> {
            final Search.Mapper searchFieldMapper = new Search.Mapper();

            @Override
            public Room map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final Search search = reader.readObject($responseFields[1], searchFieldMapper::map);
                return new Room(__typename, search);
            }
        }
    }

    public static class Search {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forList("items", "items", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        List<Item> items;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Search(@NotNull String __typename, @Nullable List<Item> items) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.items = items;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * A list of all of the objects returned in the connection.
         */
        public @Nullable
        List<Item> items() {
            return this.items;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeList($responseFields[1], items, (ResponseWriter.ListWriter) (items, listItemWriter) -> {
                    for (Object item : items) {
                        listItemWriter.writeObject(((Item) item).marshaller());
                    }
                });
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Search{"
                        + "__typename=" + __typename + ", "
                        + "items=" + items
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Search) {
                Search that = (Search) o;
                return this.__typename.equals(that.__typename)
                        && ((this.items == null) ? (that.items == null) : this.items.equals(that.items));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (items == null) ? 0 : items.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Search> {
            final Item.Mapper itemFieldMapper = new Item.Mapper();

            @Override
            public Search map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final List<Item> items = reader.readList($responseFields[1], listItemReader -> listItemReader.readObject(itemFieldMapper::map));
                return new Search(__typename, items);
            }
        }
    }

    public static class Item {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forString("id", "id", null, true, Collections.emptyList()),
                ResponseField.forString("houseId", "houseId", null, true, Collections.emptyList()),
                ResponseField.forDouble("afm", "afm", null, true, Collections.emptyList()),
                ResponseField.forDouble("asp", "asp", null, true, Collections.emptyList()),
                ResponseField.forDouble("atv", "atv", null, true, Collections.emptyList()),
                ResponseField.forDouble("customHeightOne", "customHeightOne", null, true, Collections.emptyList()),
                ResponseField.forDouble("customHeightTwo", "customHeightTwo", null, true, Collections.emptyList()),
                ResponseField.forDouble("customLenght", "customLenght", null, true, Collections.emptyList()),
                ResponseField.forDouble("customWidth", "customWidth", null, true, Collections.emptyList()),
                ResponseField.forDouble("emptyAsp", "emptyAsp", null, true, Collections.emptyList()),
                ResponseField.forDouble("height", "height", null, true, Collections.emptyList()),
                ResponseField.forDouble("lenght", "lenght", null, true, Collections.emptyList()),
                ResponseField.forDouble("pc", "pc", null, true, Collections.emptyList()),
                ResponseField.forDouble("specialAfm", "specialAfm", null, true, Collections.emptyList()),
                ResponseField.forDouble("specialTilesParquetCoefficient", "specialTilesParquetCoefficient", null, true, Collections.emptyList()),
                ResponseField.forDouble("tilesParquetCoefficient", "tilesParquetCoefficient", null, true, Collections.emptyList()),
                ResponseField.forString("type", "type", null, true, Collections.emptyList()),
                ResponseField.forDouble("wallRealCoefficient", "wallRealCoefficient", null, true, Collections.emptyList()),
                ResponseField.forDouble("width", "width", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        String id;

        final @Nullable
        String houseId;

        final @Nullable
        Double afm;

        final @Nullable
        Double asp;

        final @Nullable
        Double atv;

        final @Nullable
        Double customHeightOne;

        final @Nullable
        Double customHeightTwo;

        final @Nullable
        Double customLenght;

        final @Nullable
        Double customWidth;

        final @Nullable
        Double emptyAsp;

        final @Nullable
        Double height;

        final @Nullable
        Double lenght;

        final @Nullable
        Double pc;

        final @Nullable
        Double specialAfm;

        final @Nullable
        Double specialTilesParquetCoefficient;

        final @Nullable
        Double tilesParquetCoefficient;

        final @Nullable
        String type;

        final @Nullable
        Double wallRealCoefficient;

        final @Nullable
        Double width;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Item(@NotNull String __typename, @Nullable String id, @Nullable String houseId,
                    @Nullable Double afm, @Nullable Double asp, @Nullable Double atv,
                    @Nullable Double customHeightOne, @Nullable Double customHeightTwo,
                    @Nullable Double customLenght, @Nullable Double customWidth, @Nullable Double emptyAsp,
                    @Nullable Double height, @Nullable Double lenght, @Nullable Double pc,
                    @Nullable Double specialAfm, @Nullable Double specialTilesParquetCoefficient,
                    @Nullable Double tilesParquetCoefficient, @Nullable String type,
                    @Nullable Double wallRealCoefficient, @Nullable Double width) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.id = id;
            this.houseId = houseId;
            this.afm = afm;
            this.asp = asp;
            this.atv = atv;
            this.customHeightOne = customHeightOne;
            this.customHeightTwo = customHeightTwo;
            this.customLenght = customLenght;
            this.customWidth = customWidth;
            this.emptyAsp = emptyAsp;
            this.height = height;
            this.lenght = lenght;
            this.pc = pc;
            this.specialAfm = specialAfm;
            this.specialTilesParquetCoefficient = specialTilesParquetCoefficient;
            this.tilesParquetCoefficient = tilesParquetCoefficient;
            this.type = type;
            this.wallRealCoefficient = wallRealCoefficient;
            this.width = width;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * Room ID
         */
        public @Nullable
        String id() {
            return this.id;
        }

        /**
         * The House id that contains this room
         */
        public @Nullable
        String houseId() {
            return this.houseId;
        }

        /**
         * Room Afm
         */
        public @Nullable
        Double afm() {
            return this.afm;
        }

        /**
         * Room Asp
         */
        public @Nullable
        Double asp() {
            return this.asp;
        }

        /**
         * Room Atv
         */
        public @Nullable
        Double atv() {
            return this.atv;
        }

        /**
         * Room Custom Height 1 (d1)
         */
        public @Nullable
        Double customHeightOne() {
            return this.customHeightOne;
        }

        /**
         * Room Custom Height 2 (d2)
         */
        public @Nullable
        Double customHeightTwo() {
            return this.customHeightTwo;
        }

        /**
         * Room Custom Lenght (Ldat)
         */
        public @Nullable
        Double customLenght() {
            return this.customLenght;
        }

        /**
         * Room Custom Width (ldat)
         */
        public @Nullable
        Double customWidth() {
            return this.customWidth;
        }

        /**
         * Room Empty Asp
         */
        public @Nullable
        Double emptyAsp() {
            return this.emptyAsp;
        }

        /**
         * Room Height
         */
        public @Nullable
        Double height() {
            return this.height;
        }

        /**
         * Room Lenght
         */
        public @Nullable
        Double lenght() {
            return this.lenght;
        }

        /**
         * Room Pc
         */
        public @Nullable
        Double pc() {
            return this.pc;
        }

        /**
         * Room Special Afm
         */
        public @Nullable
        Double specialAfm() {
            return this.specialAfm;
        }

        /**
         * Room Special Parquet or Tiles Coefficient (gspecial)
         */
        public @Nullable
        Double specialTilesParquetCoefficient() {
            return this.specialTilesParquetCoefficient;
        }

        /**
         * Room Parquet or Tiles Coefficient (g)
         */
        public @Nullable
        Double tilesParquetCoefficient() {
            return this.tilesParquetCoefficient;
        }

        /**
         * Room Type
         */
        public @Nullable
        String type() {
            return this.type;
        }

        /**
         * Room Walls Real Coefficient (f)
         */
        public @Nullable
        Double wallRealCoefficient() {
            return this.wallRealCoefficient;
        }

        /**
         * Room Width
         */
        public @Nullable
        Double width() {
            return this.width;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeString($responseFields[1], id);
                writer.writeString($responseFields[2], houseId);
                writer.writeDouble($responseFields[3], afm);
                writer.writeDouble($responseFields[4], asp);
                writer.writeDouble($responseFields[5], atv);
                writer.writeDouble($responseFields[6], customHeightOne);
                writer.writeDouble($responseFields[7], customHeightTwo);
                writer.writeDouble($responseFields[8], customLenght);
                writer.writeDouble($responseFields[9], customWidth);
                writer.writeDouble($responseFields[10], emptyAsp);
                writer.writeDouble($responseFields[11], height);
                writer.writeDouble($responseFields[12], lenght);
                writer.writeDouble($responseFields[13], pc);
                writer.writeDouble($responseFields[14], specialAfm);
                writer.writeDouble($responseFields[15], specialTilesParquetCoefficient);
                writer.writeDouble($responseFields[16], tilesParquetCoefficient);
                writer.writeString($responseFields[17], type);
                writer.writeDouble($responseFields[18], wallRealCoefficient);
                writer.writeDouble($responseFields[19], width);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Item{"
                        + "__typename=" + __typename + ", "
                        + "id=" + id + ", "
                        + "houseId=" + houseId + ", "
                        + "afm=" + afm + ", "
                        + "asp=" + asp + ", "
                        + "atv=" + atv + ", "
                        + "customHeightOne=" + customHeightOne + ", "
                        + "customHeightTwo=" + customHeightTwo + ", "
                        + "customLenght=" + customLenght + ", "
                        + "customWidth=" + customWidth + ", "
                        + "emptyAsp=" + emptyAsp + ", "
                        + "height=" + height + ", "
                        + "lenght=" + lenght + ", "
                        + "pc=" + pc + ", "
                        + "specialAfm=" + specialAfm + ", "
                        + "specialTilesParquetCoefficient=" + specialTilesParquetCoefficient + ", "
                        + "tilesParquetCoefficient=" + tilesParquetCoefficient + ", "
                        + "type=" + type + ", "
                        + "wallRealCoefficient=" + wallRealCoefficient + ", "
                        + "width=" + width
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Item) {
                Item that = (Item) o;
                return this.__typename.equals(that.__typename)
                        && ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
                        && ((this.houseId == null) ? (that.houseId == null) : this.houseId.equals(that.houseId))
                        && ((this.afm == null) ? (that.afm == null) : this.afm.equals(that.afm))
                        && ((this.asp == null) ? (that.asp == null) : this.asp.equals(that.asp))
                        && ((this.atv == null) ? (that.atv == null) : this.atv.equals(that.atv))
                        && ((this.customHeightOne == null) ? (that.customHeightOne == null) : this.customHeightOne.equals(that.customHeightOne))
                        && ((this.customHeightTwo == null) ? (that.customHeightTwo == null) : this.customHeightTwo.equals(that.customHeightTwo))
                        && ((this.customLenght == null) ? (that.customLenght == null) : this.customLenght.equals(that.customLenght))
                        && ((this.customWidth == null) ? (that.customWidth == null) : this.customWidth.equals(that.customWidth))
                        && ((this.emptyAsp == null) ? (that.emptyAsp == null) : this.emptyAsp.equals(that.emptyAsp))
                        && ((this.height == null) ? (that.height == null) : this.height.equals(that.height))
                        && ((this.lenght == null) ? (that.lenght == null) : this.lenght.equals(that.lenght))
                        && ((this.pc == null) ? (that.pc == null) : this.pc.equals(that.pc))
                        && ((this.specialAfm == null) ? (that.specialAfm == null) : this.specialAfm.equals(that.specialAfm))
                        && ((this.specialTilesParquetCoefficient == null) ? (that.specialTilesParquetCoefficient == null) : this.specialTilesParquetCoefficient.equals(that.specialTilesParquetCoefficient))
                        && ((this.tilesParquetCoefficient == null) ? (that.tilesParquetCoefficient == null) : this.tilesParquetCoefficient.equals(that.tilesParquetCoefficient))
                        && ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
                        && ((this.wallRealCoefficient == null) ? (that.wallRealCoefficient == null) : this.wallRealCoefficient.equals(that.wallRealCoefficient))
                        && ((this.width == null) ? (that.width == null) : this.width.equals(that.width));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (id == null) ? 0 : id.hashCode();
                h *= 1000003;
                h ^= (houseId == null) ? 0 : houseId.hashCode();
                h *= 1000003;
                h ^= (afm == null) ? 0 : afm.hashCode();
                h *= 1000003;
                h ^= (asp == null) ? 0 : asp.hashCode();
                h *= 1000003;
                h ^= (atv == null) ? 0 : atv.hashCode();
                h *= 1000003;
                h ^= (customHeightOne == null) ? 0 : customHeightOne.hashCode();
                h *= 1000003;
                h ^= (customHeightTwo == null) ? 0 : customHeightTwo.hashCode();
                h *= 1000003;
                h ^= (customLenght == null) ? 0 : customLenght.hashCode();
                h *= 1000003;
                h ^= (customWidth == null) ? 0 : customWidth.hashCode();
                h *= 1000003;
                h ^= (emptyAsp == null) ? 0 : emptyAsp.hashCode();
                h *= 1000003;
                h ^= (height == null) ? 0 : height.hashCode();
                h *= 1000003;
                h ^= (lenght == null) ? 0 : lenght.hashCode();
                h *= 1000003;
                h ^= (pc == null) ? 0 : pc.hashCode();
                h *= 1000003;
                h ^= (specialAfm == null) ? 0 : specialAfm.hashCode();
                h *= 1000003;
                h ^= (specialTilesParquetCoefficient == null) ? 0 : specialTilesParquetCoefficient.hashCode();
                h *= 1000003;
                h ^= (tilesParquetCoefficient == null) ? 0 : tilesParquetCoefficient.hashCode();
                h *= 1000003;
                h ^= (type == null) ? 0 : type.hashCode();
                h *= 1000003;
                h ^= (wallRealCoefficient == null) ? 0 : wallRealCoefficient.hashCode();
                h *= 1000003;
                h ^= (width == null) ? 0 : width.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Item> {
            @Override
            public Item map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final String id = reader.readString($responseFields[1]);
                final String houseId = reader.readString($responseFields[2]);
                final Double afm = reader.readDouble($responseFields[3]);
                final Double asp = reader.readDouble($responseFields[4]);
                final Double atv = reader.readDouble($responseFields[5]);
                final Double customHeightOne = reader.readDouble($responseFields[6]);
                final Double customHeightTwo = reader.readDouble($responseFields[7]);
                final Double customLenght = reader.readDouble($responseFields[8]);
                final Double customWidth = reader.readDouble($responseFields[9]);
                final Double emptyAsp = reader.readDouble($responseFields[10]);
                final Double height = reader.readDouble($responseFields[11]);
                final Double lenght = reader.readDouble($responseFields[12]);
                final Double pc = reader.readDouble($responseFields[13]);
                final Double specialAfm = reader.readDouble($responseFields[14]);
                final Double specialTilesParquetCoefficient = reader.readDouble($responseFields[15]);
                final Double tilesParquetCoefficient = reader.readDouble($responseFields[16]);
                final String type = reader.readString($responseFields[17]);
                final Double wallRealCoefficient = reader.readDouble($responseFields[18]);
                final Double width = reader.readDouble($responseFields[19]);
                return new Item(__typename, id, houseId, afm, asp, atv, customHeightOne, customHeightTwo, customLenght, customWidth, emptyAsp, height, lenght, pc, specialAfm, specialTilesParquetCoefficient, tilesParquetCoefficient, type, wallRealCoefficient, width);
            }
        }
    }
}
