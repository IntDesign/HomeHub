// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.types;

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;

public final class MaterialCreateViewModel implements InputType {
    private final @NotNull
    String materialName;

    private final @NotNull
    String roomJobId;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    MaterialCreateViewModel(@NotNull String materialName, @NotNull String roomJobId) {
        this.materialName = materialName;
        this.roomJobId = roomJobId;
    }

    /**
     * Material Name
     */
    public @NotNull
    String materialName() {
        return this.materialName;
    }

    /**
     * Material RoomJob Id that needs this material
     */
    public @NotNull
    String roomJobId() {
        return this.roomJobId;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public InputFieldMarshaller marshaller() {
        return writer -> {
            writer.writeString("materialName", materialName);
            writer.writeString("roomJobId", roomJobId);
        };
    }

    @Override
    public int hashCode() {
        if (!$hashCodeMemoized) {
            int h = 1;
            h *= 1000003;
            h ^= materialName.hashCode();
            h *= 1000003;
            h ^= roomJobId.hashCode();
            $hashCode = h;
            $hashCodeMemoized = true;
        }
        return $hashCode;
    }

    @Override
    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }
        if (o instanceof MaterialCreateViewModel) {
            MaterialCreateViewModel that = (MaterialCreateViewModel) o;
            return this.materialName.equals(that.materialName)
                    && this.roomJobId.equals(that.roomJobId);
        }
        return false;
    }

    public static final class Builder {
        private @NotNull
        String materialName = "null";

        private @NotNull
        String roomJobId = "null";

        Builder() {
        }

        /**
         * Material Name
         */
        public Builder materialName(@NotNull String materialName) {
            this.materialName = materialName;
            return this;
        }

        /**
         * Material RoomJob Id that needs this material
         */
        public Builder roomJobId(@NotNull String roomJobId) {
            this.roomJobId = roomJobId;
            return this;
        }

        public MaterialCreateViewModel build() {
            Utils.checkNotNull(materialName, "materialName == null");
            Utils.checkNotNull(roomJobId, "roomJobId == null");
            return new MaterialCreateViewModel(materialName, roomJobId);
        }
    }
}
