// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.mutations;

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.Mutation;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.intDesign.homeHub.infrastructure.graphql.types.MaterialExpenditureCreateViewModel;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

public final class AddExpenditureMutation implements Mutation<AddExpenditureMutation.Data, AddExpenditureMutation.Data, AddExpenditureMutation.Variables> {
    public static final String OPERATION_ID = "d76a71cd6001848bd0ab263bff3ed987337c436165c00b5a03af173727ec28c5";

    public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
            "mutation AddExpenditure($expenditure:MaterialExpenditureCreateViewModel!) {\n"
                    + "  expenditures:expenditures {\n"
                    + "    __typename\n"
                    + "    addExpenditure(materialExpenditure:$expenditure) {\n"
                    + "      __typename\n"
                    + "      id\n"
                    + "    }\n"
                    + "  }\n"
                    + "}"
    );

    public static final OperationName OPERATION_NAME = () -> "AddExpenditure";

    private final AddExpenditureMutation.Variables variables;

    public AddExpenditureMutation(@NotNull MaterialExpenditureCreateViewModel expenditure) {
        Utils.checkNotNull(expenditure, "expenditure == null");
        variables = new AddExpenditureMutation.Variables(expenditure);
    }

    @NotNull
    @Override
    public String operationId() {
        return OPERATION_ID;
    }

    @Override
    public String queryDocument() {
        return QUERY_DOCUMENT;
    }

    @Override
    public AddExpenditureMutation.Data wrapData(AddExpenditureMutation.Data data) {
        return data;
    }

    @Override
    public AddExpenditureMutation.Variables variables() {
        return variables;
    }

    @Override
    public ResponseFieldMapper<AddExpenditureMutation.Data> responseFieldMapper() {
        return new Data.Mapper();
    }

    public static Builder builder() {
        return new Builder();
    }

    @NotNull
    @Override
    public OperationName name() {
        return OPERATION_NAME;
    }

    public static final class Builder {
        private @NotNull
        MaterialExpenditureCreateViewModel expenditure;

        Builder() {
        }

        public Builder expenditure(@NotNull MaterialExpenditureCreateViewModel expenditure) {
            this.expenditure = expenditure;
            return this;
        }

        public AddExpenditureMutation build() {
            Utils.checkNotNull(expenditure, "expenditure == null");
            return new AddExpenditureMutation(expenditure);
        }
    }

    public static final class Variables extends Operation.Variables {
        private final @NotNull
        MaterialExpenditureCreateViewModel expenditure;

        private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

        Variables(@NotNull MaterialExpenditureCreateViewModel expenditure) {
            this.expenditure = expenditure;
            this.valueMap.put("expenditure", expenditure);
        }

        public @NotNull
        MaterialExpenditureCreateViewModel expenditure() {
            return expenditure;
        }

        @NotNull
        @Override
        public Map<String, Object> valueMap() {
            return Collections.unmodifiableMap(valueMap);
        }

        @Override
        public InputFieldMarshaller marshaller() {
            return writer -> writer.writeObject("expenditure", expenditure.marshaller());
        }
    }

    public static class Data implements Operation.Data {
        static final ResponseField[] $responseFields = {
                ResponseField.forObject("expenditures", "expenditures", null, true, Collections.emptyList())
        };

        final @Nullable
        Expenditures expenditures;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Data(@Nullable Expenditures expenditures) {
            this.expenditures = expenditures;
        }

        public @Nullable
        Expenditures expenditures() {
            return this.expenditures;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> writer.writeObject($responseFields[0], expenditures != null ? expenditures.marshaller() : null);
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Data{"
                        + "expenditures=" + expenditures
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Data) {
                Data that = (Data) o;
                return ((this.expenditures == null) ? (that.expenditures == null) : this.expenditures.equals(that.expenditures));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= (expenditures == null) ? 0 : expenditures.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Data> {
            final Expenditures.Mapper expendituresFieldMapper = new Expenditures.Mapper();

            @Override
            public Data map(ResponseReader reader) {
                final Expenditures expenditures = reader.readObject($responseFields[0], expendituresFieldMapper::map);
                return new Data(expenditures);
            }
        }
    }

    public static class Expenditures {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forObject("addExpenditure", "addExpenditure", new UnmodifiableMapBuilder<String, Object>(1)
                        .put("materialExpenditure", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "expenditure")
                                .build())
                        .build(), true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        AddExpenditure addExpenditure;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Expenditures(@NotNull String __typename, @Nullable AddExpenditure addExpenditure) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.addExpenditure = addExpenditure;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        public @Nullable
        AddExpenditure addExpenditure() {
            return this.addExpenditure;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeObject($responseFields[1], addExpenditure != null ? addExpenditure.marshaller() : null);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Expenditures{"
                        + "__typename=" + __typename + ", "
                        + "addExpenditure=" + addExpenditure
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Expenditures) {
                Expenditures that = (Expenditures) o;
                return this.__typename.equals(that.__typename)
                        && ((this.addExpenditure == null) ? (that.addExpenditure == null) : this.addExpenditure.equals(that.addExpenditure));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (addExpenditure == null) ? 0 : addExpenditure.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Expenditures> {
            final AddExpenditure.Mapper addExpenditureFieldMapper = new AddExpenditure.Mapper();

            @Override
            public Expenditures map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final AddExpenditure addExpenditure = reader.readObject($responseFields[1], addExpenditureFieldMapper::map);
                return new Expenditures(__typename, addExpenditure);
            }
        }
    }

    public static class AddExpenditure {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forString("id", "id", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        String id;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public AddExpenditure(@NotNull String __typename, @Nullable String id) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.id = id;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * Material Expenditure ID
         */
        public @Nullable
        String id() {
            return this.id;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeString($responseFields[1], id);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "AddExpenditure{"
                        + "__typename=" + __typename + ", "
                        + "id=" + id
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof AddExpenditure) {
                AddExpenditure that = (AddExpenditure) o;
                return this.__typename.equals(that.__typename)
                        && ((this.id == null) ? (that.id == null) : this.id.equals(that.id));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (id == null) ? 0 : id.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<AddExpenditure> {
            @Override
            public AddExpenditure map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final String id = reader.readString($responseFields[1]);
                return new AddExpenditure(__typename, id);
            }
        }
    }
}
