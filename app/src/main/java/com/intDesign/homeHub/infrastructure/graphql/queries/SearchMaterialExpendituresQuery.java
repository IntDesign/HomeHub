// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.queries;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.intDesign.homeHub.infrastructure.graphql.types.MaterialExpenditureFilterRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.OrderedRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.PagedRequestType;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class SearchMaterialExpendituresQuery implements Query<SearchMaterialExpendituresQuery.Data, SearchMaterialExpendituresQuery.Data, SearchMaterialExpendituresQuery.Variables> {
    public static final String OPERATION_ID = "990362a40dc9dff66b05ec887492b511a2b076f5892fec3b0550c8b3b3ea715d";

    public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
            "query searchMaterialExpenditures($pagination: PagedRequestType!, $ordering: OrderedRequestType!, $filter: MaterialExpenditureFilterRequestType) {\n"
                    + "  expenditures {\n"
                    + "    __typename\n"
                    + "    search(pagination: $pagination, ordering: $ordering, filter: $filter) {\n"
                    + "      __typename\n"
                    + "      items {\n"
                    + "        __typename\n"
                    + "        id\n"
                    + "        materialInformationId\n"
                    + "        totalPackets\n"
                    + "        totalPrice\n"
                    + "        totalQuantity\n"
                    + "      }\n"
                    + "    }\n"
                    + "  }\n"
                    + "}"
    );

    public static final OperationName OPERATION_NAME = () -> "searchMaterialExpenditures";

    private final SearchMaterialExpendituresQuery.Variables variables;

    public SearchMaterialExpendituresQuery(@NotNull PagedRequestType pagination,
                                           @NotNull OrderedRequestType ordering,
                                           @NotNull Input<MaterialExpenditureFilterRequestType> filter) {
        Utils.checkNotNull(pagination, "pagination == null");
        Utils.checkNotNull(ordering, "ordering == null");
        Utils.checkNotNull(filter, "filter == null");
        variables = new SearchMaterialExpendituresQuery.Variables(pagination, ordering, filter);
    }

    @NotNull
    @Override
    public String operationId() {
        return OPERATION_ID;
    }

    @Override
    public String queryDocument() {
        return QUERY_DOCUMENT;
    }

    @Override
    public SearchMaterialExpendituresQuery.Data wrapData(SearchMaterialExpendituresQuery.Data data) {
        return data;
    }

    @Override
    public SearchMaterialExpendituresQuery.Variables variables() {
        return variables;
    }

    @Override
    public ResponseFieldMapper<SearchMaterialExpendituresQuery.Data> responseFieldMapper() {
        return new Data.Mapper();
    }

    public static Builder builder() {
        return new Builder();
    }

    @NotNull
    @Override
    public OperationName name() {
        return OPERATION_NAME;
    }

    public static final class Builder {
        private @NotNull
        PagedRequestType pagination;

        private @NotNull
        OrderedRequestType ordering;

        private Input<MaterialExpenditureFilterRequestType> filter = Input.absent();

        Builder() {
        }

        public Builder pagination(@NotNull PagedRequestType pagination) {
            this.pagination = pagination;
            return this;
        }

        public Builder ordering(@NotNull OrderedRequestType ordering) {
            this.ordering = ordering;
            return this;
        }

        public Builder filter(@Nullable MaterialExpenditureFilterRequestType filter) {
            this.filter = Input.fromNullable(filter);
            return this;
        }

        public Builder filterInput(@NotNull Input<MaterialExpenditureFilterRequestType> filter) {
            this.filter = Utils.checkNotNull(filter, "filter == null");
            return this;
        }

        public SearchMaterialExpendituresQuery build() {
            Utils.checkNotNull(pagination, "pagination == null");
            Utils.checkNotNull(ordering, "ordering == null");
            return new SearchMaterialExpendituresQuery(pagination, ordering, filter);
        }
    }

    public static final class Variables extends Operation.Variables {
        private final @NotNull
        PagedRequestType pagination;

        private final @NotNull
        OrderedRequestType ordering;

        private final Input<MaterialExpenditureFilterRequestType> filter;

        private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

        Variables(@NotNull PagedRequestType pagination, @NotNull OrderedRequestType ordering,
                  Input<MaterialExpenditureFilterRequestType> filter) {
            this.pagination = pagination;
            this.ordering = ordering;
            this.filter = filter;
            this.valueMap.put("pagination", pagination);
            this.valueMap.put("ordering", ordering);
            if (filter.defined) {
                this.valueMap.put("filter", filter.value);
            }
        }

        public @NotNull
        PagedRequestType pagination() {
            return pagination;
        }

        public @NotNull
        OrderedRequestType ordering() {
            return ordering;
        }

        public Input<MaterialExpenditureFilterRequestType> filter() {
            return filter;
        }

        @NotNull
        @Override
        public Map<String, Object> valueMap() {
            return Collections.unmodifiableMap(valueMap);
        }

        @Override
        public InputFieldMarshaller marshaller() {
            return writer -> {
                writer.writeObject("pagination", pagination.marshaller());
                writer.writeObject("ordering", ordering.marshaller());
                if (filter.defined) {
                    writer.writeObject("filter", filter.value != null ? filter.value.marshaller() : null);
                }
            };
        }
    }

    public static class Data implements Operation.Data {
        static final ResponseField[] $responseFields = {
                ResponseField.forObject("expenditures", "expenditures", null, true, Collections.emptyList())
        };

        final @Nullable
        Expenditures expenditures;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Data(@Nullable Expenditures expenditures) {
            this.expenditures = expenditures;
        }

        public @Nullable
        Expenditures expenditures() {
            return this.expenditures;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> writer.writeObject($responseFields[0], expenditures != null ? expenditures.marshaller() : null);
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Data{"
                        + "expenditures=" + expenditures
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Data) {
                Data that = (Data) o;
                return ((this.expenditures == null) ? (that.expenditures == null) : this.expenditures.equals(that.expenditures));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= (expenditures == null) ? 0 : expenditures.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Data> {
            final Expenditures.Mapper expendituresFieldMapper = new Expenditures.Mapper();

            @Override
            public Data map(ResponseReader reader) {
                final Expenditures expenditures = reader.readObject($responseFields[0], expendituresFieldMapper::map);
                return new Data(expenditures);
            }
        }
    }

    public static class Expenditures {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forObject("search", "search", new UnmodifiableMapBuilder<String, Object>(3)
                        .put("pagination", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "pagination")
                                .build())
                        .put("ordering", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "ordering")
                                .build())
                        .put("filter", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "filter")
                                .build())
                        .build(), true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        Search search;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Expenditures(@NotNull String __typename, @Nullable Search search) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.search = search;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        public @Nullable
        Search search() {
            return this.search;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeObject($responseFields[1], search != null ? search.marshaller() : null);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Expenditures{"
                        + "__typename=" + __typename + ", "
                        + "search=" + search
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Expenditures) {
                Expenditures that = (Expenditures) o;
                return this.__typename.equals(that.__typename)
                        && ((this.search == null) ? (that.search == null) : this.search.equals(that.search));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (search == null) ? 0 : search.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Expenditures> {
            final Search.Mapper searchFieldMapper = new Search.Mapper();

            @Override
            public Expenditures map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final Search search = reader.readObject($responseFields[1], searchFieldMapper::map);
                return new Expenditures(__typename, search);
            }
        }
    }

    public static class Search {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forList("items", "items", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        List<Item> items;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Search(@NotNull String __typename, @Nullable List<Item> items) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.items = items;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * A list of all of the objects returned in the connection.
         */
        public @Nullable
        List<Item> items() {
            return this.items;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeList($responseFields[1], items, (ResponseWriter.ListWriter) (items, listItemWriter) -> {
                    for (Object item : items) {
                        listItemWriter.writeObject(((Item) item).marshaller());
                    }
                });
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Search{"
                        + "__typename=" + __typename + ", "
                        + "items=" + items
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Search) {
                Search that = (Search) o;
                return this.__typename.equals(that.__typename)
                        && ((this.items == null) ? (that.items == null) : this.items.equals(that.items));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (items == null) ? 0 : items.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Search> {
            final Item.Mapper itemFieldMapper = new Item.Mapper();

            @Override
            public Search map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final List<Item> items = reader.readList($responseFields[1], listItemReader -> listItemReader.readObject(itemFieldMapper::map));
                return new Search(__typename, items);
            }
        }
    }

    public static class Item {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forString("id", "id", null, true, Collections.emptyList()),
                ResponseField.forDouble("materialInformationId", "materialInformationId", null, true, Collections.emptyList()),
                ResponseField.forDouble("totalPackets", "totalPackets", null, true, Collections.emptyList()),
                ResponseField.forDouble("totalPrice", "totalPrice", null, true, Collections.emptyList()),
                ResponseField.forDouble("totalQuantity", "totalQuantity", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        String id;

        final @Nullable
        Double materialInformationId;

        final @Nullable
        Double totalPackets;

        final @Nullable
        Double totalPrice;

        final @Nullable
        Double totalQuantity;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Item(@NotNull String __typename, @Nullable String id,
                    @Nullable Double materialInformationId, @Nullable Double totalPackets,
                    @Nullable Double totalPrice, @Nullable Double totalQuantity) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.id = id;
            this.materialInformationId = materialInformationId;
            this.totalPackets = totalPackets;
            this.totalPrice = totalPrice;
            this.totalQuantity = totalQuantity;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * Material Expenditure ID
         */
        public @Nullable
        String id() {
            return this.id;
        }

        /**
         * Material Expenditure Material Information ID
         */
        public @Nullable
        Double materialInformationId() {
            return this.materialInformationId;
        }

        /**
         * Material Expenditure total packets needed
         */
        public @Nullable
        Double totalPackets() {
            return this.totalPackets;
        }

        /**
         * Material Expenditure total price
         */
        public @Nullable
        Double totalPrice() {
            return this.totalPrice;
        }

        /**
         * Material Expenditure total kilograms needed
         */
        public @Nullable
        Double totalQuantity() {
            return this.totalQuantity;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeString($responseFields[1], id);
                writer.writeDouble($responseFields[2], materialInformationId);
                writer.writeDouble($responseFields[3], totalPackets);
                writer.writeDouble($responseFields[4], totalPrice);
                writer.writeDouble($responseFields[5], totalQuantity);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Item{"
                        + "__typename=" + __typename + ", "
                        + "id=" + id + ", "
                        + "materialInformationId=" + materialInformationId + ", "
                        + "totalPackets=" + totalPackets + ", "
                        + "totalPrice=" + totalPrice + ", "
                        + "totalQuantity=" + totalQuantity
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Item) {
                Item that = (Item) o;
                return this.__typename.equals(that.__typename)
                        && ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
                        && ((this.materialInformationId == null) ? (that.materialInformationId == null) : this.materialInformationId.equals(that.materialInformationId))
                        && ((this.totalPackets == null) ? (that.totalPackets == null) : this.totalPackets.equals(that.totalPackets))
                        && ((this.totalPrice == null) ? (that.totalPrice == null) : this.totalPrice.equals(that.totalPrice))
                        && ((this.totalQuantity == null) ? (that.totalQuantity == null) : this.totalQuantity.equals(that.totalQuantity));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (id == null) ? 0 : id.hashCode();
                h *= 1000003;
                h ^= (materialInformationId == null) ? 0 : materialInformationId.hashCode();
                h *= 1000003;
                h ^= (totalPackets == null) ? 0 : totalPackets.hashCode();
                h *= 1000003;
                h ^= (totalPrice == null) ? 0 : totalPrice.hashCode();
                h *= 1000003;
                h ^= (totalQuantity == null) ? 0 : totalQuantity.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Item> {
            @Override
            public Item map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final String id = reader.readString($responseFields[1]);
                final Double materialInformationId = reader.readDouble($responseFields[2]);
                final Double totalPackets = reader.readDouble($responseFields[3]);
                final Double totalPrice = reader.readDouble($responseFields[4]);
                final Double totalQuantity = reader.readDouble($responseFields[5]);
                return new Item(__typename, id, materialInformationId, totalPackets, totalPrice, totalQuantity);
            }
        }
    }
}
