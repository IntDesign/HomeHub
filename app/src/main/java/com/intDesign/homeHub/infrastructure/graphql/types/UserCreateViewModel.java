// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.types;

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputFieldWriter;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;

import java.io.IOException;

public final class UserCreateViewModel implements InputType {
    private final @NotNull
    String username;

    private final @NotNull
    String password;

    private final @NotNull
    String email;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    UserCreateViewModel(@NotNull String username, @NotNull String password, @NotNull String email) {
        this.username = username;
        this.password = password;
        this.email = email;
    }

    public @NotNull
    String username() {
        return this.username;
    }

    public @NotNull
    String password() {
        return this.password;
    }

    public @NotNull
    String email() {
        return this.email;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public InputFieldMarshaller marshaller() {
        return new InputFieldMarshaller() {
            @Override
            public void marshal(InputFieldWriter writer) throws IOException {
                writer.writeString("username", username);
                writer.writeString("password", password);
                writer.writeString("email", email);
            }
        };
    }

    @Override
    public int hashCode() {
        if (!$hashCodeMemoized) {
            int h = 1;
            h *= 1000003;
            h ^= username.hashCode();
            h *= 1000003;
            h ^= password.hashCode();
            h *= 1000003;
            h ^= email.hashCode();
            $hashCode = h;
            $hashCodeMemoized = true;
        }
        return $hashCode;
    }

    @Override
    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }
        if (o instanceof UserCreateViewModel) {
            UserCreateViewModel that = (UserCreateViewModel) o;
            return this.username.equals(that.username)
                    && this.password.equals(that.password)
                    && this.email.equals(that.email);
        }
        return false;
    }

    public static final class Builder {
        private @NotNull
        String username = "null";

        private @NotNull
        String password = "null";

        private @NotNull
        String email = "null";

        Builder() {
        }

        public Builder username(@NotNull String username) {
            this.username = username;
            return this;
        }

        public Builder password(@NotNull String password) {
            this.password = password;
            return this;
        }

        public Builder email(@NotNull String email) {
            this.email = email;
            return this;
        }

        public UserCreateViewModel build() {
            Utils.checkNotNull(username, "username == null");
            Utils.checkNotNull(password, "password == null");
            Utils.checkNotNull(email, "email == null");
            return new UserCreateViewModel(username, password, email);
        }
    }
}
