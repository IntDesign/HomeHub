// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.queries;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import com.apollographql.apollo.internal.QueryDocumentMinifier;
import com.intDesign.homeHub.infrastructure.graphql.types.MaterialInformationFilterRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.OrderedRequestType;
import com.intDesign.homeHub.infrastructure.graphql.types.PagedRequestType;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class SearchMaterialInformationsQuery implements Query<SearchMaterialInformationsQuery.Data, SearchMaterialInformationsQuery.Data, SearchMaterialInformationsQuery.Variables> {
    public static final String OPERATION_ID = "787d2e23341db45fe698d9dbd3cb2c863dbf980e0c711213dcecd1a547c3f43a";

    public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
            "query searchMaterialInformations($pagination: PagedRequestType!, $ordering: OrderedRequestType!, $filter: MaterialInformationFilterRequestType) {\n"
                    + "  materialInfo {\n"
                    + "    __typename\n"
                    + "    search(pagination: $pagination, ordering: $ordering, filter: $filter) {\n"
                    + "      __typename\n"
                    + "      items {\n"
                    + "        __typename\n"
                    + "        id\n"
                    + "        appliedLayers\n"
                    + "        consumptionX\n"
                    + "        consumptionZ\n"
                    + "        materialId\n"
                    + "        pricePerUnit\n"
                    + "        productQuantity\n"
                    + "        providerId\n"
                    + "        unitCover\n"
                    + "      }\n"
                    + "    }\n"
                    + "  }\n"
                    + "}"
    );

    public static final OperationName OPERATION_NAME = () -> "searchMaterialInformations";

    private final SearchMaterialInformationsQuery.Variables variables;

    public SearchMaterialInformationsQuery(@NotNull PagedRequestType pagination,
                                           @NotNull OrderedRequestType ordering,
                                           @NotNull Input<MaterialInformationFilterRequestType> filter) {
        Utils.checkNotNull(pagination, "pagination == null");
        Utils.checkNotNull(ordering, "ordering == null");
        Utils.checkNotNull(filter, "filter == null");
        variables = new SearchMaterialInformationsQuery.Variables(pagination, ordering, filter);
    }

    @NotNull
    @Override
    public String operationId() {
        return OPERATION_ID;
    }

    @Override
    public String queryDocument() {
        return QUERY_DOCUMENT;
    }

    @Override
    public SearchMaterialInformationsQuery.Data wrapData(SearchMaterialInformationsQuery.Data data) {
        return data;
    }

    @Override
    public SearchMaterialInformationsQuery.Variables variables() {
        return variables;
    }

    @Override
    public ResponseFieldMapper<SearchMaterialInformationsQuery.Data> responseFieldMapper() {
        return new Data.Mapper();
    }

    public static Builder builder() {
        return new Builder();
    }

    @NotNull
    @Override
    public OperationName name() {
        return OPERATION_NAME;
    }

    public static final class Builder {
        private @NotNull
        PagedRequestType pagination;

        private @NotNull
        OrderedRequestType ordering;

        private Input<MaterialInformationFilterRequestType> filter = Input.absent();

        Builder() {
        }

        public Builder pagination(@NotNull PagedRequestType pagination) {
            this.pagination = pagination;
            return this;
        }

        public Builder ordering(@NotNull OrderedRequestType ordering) {
            this.ordering = ordering;
            return this;
        }

        public Builder filter(@Nullable MaterialInformationFilterRequestType filter) {
            this.filter = Input.fromNullable(filter);
            return this;
        }

        public Builder filterInput(@NotNull Input<MaterialInformationFilterRequestType> filter) {
            this.filter = Utils.checkNotNull(filter, "filter == null");
            return this;
        }

        public SearchMaterialInformationsQuery build() {
            Utils.checkNotNull(pagination, "pagination == null");
            Utils.checkNotNull(ordering, "ordering == null");
            return new SearchMaterialInformationsQuery(pagination, ordering, filter);
        }
    }

    public static final class Variables extends Operation.Variables {
        private final @NotNull
        PagedRequestType pagination;

        private final @NotNull
        OrderedRequestType ordering;

        private final Input<MaterialInformationFilterRequestType> filter;

        private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

        Variables(@NotNull PagedRequestType pagination, @NotNull OrderedRequestType ordering,
                  Input<MaterialInformationFilterRequestType> filter) {
            this.pagination = pagination;
            this.ordering = ordering;
            this.filter = filter;
            this.valueMap.put("pagination", pagination);
            this.valueMap.put("ordering", ordering);
            if (filter.defined) {
                this.valueMap.put("filter", filter.value);
            }
        }

        public @NotNull
        PagedRequestType pagination() {
            return pagination;
        }

        public @NotNull
        OrderedRequestType ordering() {
            return ordering;
        }

        public Input<MaterialInformationFilterRequestType> filter() {
            return filter;
        }

        @NotNull
        @Override
        public Map<String, Object> valueMap() {
            return Collections.unmodifiableMap(valueMap);
        }

        @Override
        public InputFieldMarshaller marshaller() {
            return writer -> {
                writer.writeObject("pagination", pagination.marshaller());
                writer.writeObject("ordering", ordering.marshaller());
                if (filter.defined) {
                    writer.writeObject("filter", filter.value != null ? filter.value.marshaller() : null);
                }
            };
        }
    }

    public static class Data implements Operation.Data {
        static final ResponseField[] $responseFields = {
                ResponseField.forObject("materialInfo", "materialInfo", null, true, Collections.emptyList())
        };

        final @Nullable
        MaterialInfo materialInfo;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Data(@Nullable MaterialInfo materialInfo) {
            this.materialInfo = materialInfo;
        }

        public @Nullable
        MaterialInfo materialInfo() {
            return this.materialInfo;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> writer.writeObject($responseFields[0], materialInfo != null ? materialInfo.marshaller() : null);
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Data{"
                        + "materialInfo=" + materialInfo
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Data) {
                Data that = (Data) o;
                return ((this.materialInfo == null) ? (that.materialInfo == null) : this.materialInfo.equals(that.materialInfo));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= (materialInfo == null) ? 0 : materialInfo.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Data> {
            final MaterialInfo.Mapper materialInfoFieldMapper = new MaterialInfo.Mapper();

            @Override
            public Data map(ResponseReader reader) {
                final MaterialInfo materialInfo = reader.readObject($responseFields[0], materialInfoFieldMapper::map);
                return new Data(materialInfo);
            }
        }
    }

    public static class MaterialInfo {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forObject("search", "search", new UnmodifiableMapBuilder<String, Object>(3)
                        .put("pagination", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "pagination")
                                .build())
                        .put("ordering", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "ordering")
                                .build())
                        .put("filter", new UnmodifiableMapBuilder<String, Object>(2)
                                .put("kind", "Variable")
                                .put("variableName", "filter")
                                .build())
                        .build(), true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        Search search;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public MaterialInfo(@NotNull String __typename, @Nullable Search search) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.search = search;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        public @Nullable
        Search search() {
            return this.search;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeObject($responseFields[1], search != null ? search.marshaller() : null);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "MaterialInfo{"
                        + "__typename=" + __typename + ", "
                        + "search=" + search
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof MaterialInfo) {
                MaterialInfo that = (MaterialInfo) o;
                return this.__typename.equals(that.__typename)
                        && ((this.search == null) ? (that.search == null) : this.search.equals(that.search));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (search == null) ? 0 : search.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<MaterialInfo> {
            final Search.Mapper searchFieldMapper = new Search.Mapper();

            @Override
            public MaterialInfo map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final Search search = reader.readObject($responseFields[1], searchFieldMapper::map);
                return new MaterialInfo(__typename, search);
            }
        }
    }

    public static class Search {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forList("items", "items", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        List<Item> items;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Search(@NotNull String __typename, @Nullable List<Item> items) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.items = items;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * A list of all of the objects returned in the connection.
         */
        public @Nullable
        List<Item> items() {
            return this.items;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeList($responseFields[1], items, (ResponseWriter.ListWriter) (items, listItemWriter) -> {
                    for (Object item : items) {
                        listItemWriter.writeObject(((Item) item).marshaller());
                    }
                });
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Search{"
                        + "__typename=" + __typename + ", "
                        + "items=" + items
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Search) {
                Search that = (Search) o;
                return this.__typename.equals(that.__typename)
                        && ((this.items == null) ? (that.items == null) : this.items.equals(that.items));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (items == null) ? 0 : items.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Search> {
            final Item.Mapper itemFieldMapper = new Item.Mapper();

            @Override
            public Search map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final List<Item> items = reader.readList($responseFields[1], listItemReader -> listItemReader.readObject(itemFieldMapper::map));
                return new Search(__typename, items);
            }
        }
    }

    public static class Item {
        static final ResponseField[] $responseFields = {
                ResponseField.forString("__typename", "__typename", null, false, Collections.emptyList()),
                ResponseField.forString("id", "id", null, true, Collections.emptyList()),
                ResponseField.forDouble("appliedLayers", "appliedLayers", null, true, Collections.emptyList()),
                ResponseField.forDouble("consumptionX", "consumptionX", null, true, Collections.emptyList()),
                ResponseField.forDouble("consumptionZ", "consumptionZ", null, true, Collections.emptyList()),
                ResponseField.forString("materialId", "materialId", null, true, Collections.emptyList()),
                ResponseField.forDouble("pricePerUnit", "pricePerUnit", null, true, Collections.emptyList()),
                ResponseField.forDouble("productQuantity", "productQuantity", null, true, Collections.emptyList()),
                ResponseField.forString("providerId", "providerId", null, true, Collections.emptyList()),
                ResponseField.forDouble("unitCover", "unitCover", null, true, Collections.emptyList())
        };

        final @NotNull
        String __typename;

        final @Nullable
        String id;

        final @Nullable
        Double appliedLayers;

        final @Nullable
        Double consumptionX;

        final @Nullable
        Double consumptionZ;

        final @Nullable
        String materialId;

        final @Nullable
        Double pricePerUnit;

        final @Nullable
        Double productQuantity;

        final @Nullable
        String providerId;

        final @Nullable
        Double unitCover;

        private transient volatile String $toString;

        private transient volatile int $hashCode;

        private transient volatile boolean $hashCodeMemoized;

        public Item(@NotNull String __typename, @Nullable String id, @Nullable Double appliedLayers,
                    @Nullable Double consumptionX, @Nullable Double consumptionZ, @Nullable String materialId,
                    @Nullable Double pricePerUnit, @Nullable Double productQuantity,
                    @Nullable String providerId, @Nullable Double unitCover) {
            this.__typename = Utils.checkNotNull(__typename, "__typename == null");
            this.id = id;
            this.appliedLayers = appliedLayers;
            this.consumptionX = consumptionX;
            this.consumptionZ = consumptionZ;
            this.materialId = materialId;
            this.pricePerUnit = pricePerUnit;
            this.productQuantity = productQuantity;
            this.providerId = providerId;
            this.unitCover = unitCover;
        }

        public @NotNull
        String __typename() {
            return this.__typename;
        }

        /**
         * Material Information ID
         */
        public @Nullable
        String id() {
            return this.id;
        }

        /**
         * Material Information Applied Layers
         */
        public @Nullable
        Double appliedLayers() {
            return this.appliedLayers;
        }

        /**
         * Material Information Consumption X
         */
        public @Nullable
        Double consumptionX() {
            return this.consumptionX;
        }

        /**
         * Material Information Consumption Z
         */
        public @Nullable
        Double consumptionZ() {
            return this.consumptionZ;
        }

        /**
         * Material Information Material Id
         */
        public @Nullable
        String materialId() {
            return this.materialId;
        }

        /**
         * Price for an unit
         */
        public @Nullable
        Double pricePerUnit() {
            return this.pricePerUnit;
        }

        /**
         * Product Quantity
         */
        public @Nullable
        Double productQuantity() {
            return this.productQuantity;
        }

        /**
         * Material Information Provider Id
         */
        public @Nullable
        String providerId() {
            return this.providerId;
        }

        /**
         * Material Information Unit Cover -> n
         */
        public @Nullable
        Double unitCover() {
            return this.unitCover;
        }

        @SuppressWarnings("unchecked")
        public ResponseFieldMarshaller marshaller() {
            return writer -> {
                writer.writeString($responseFields[0], __typename);
                writer.writeString($responseFields[1], id);
                writer.writeDouble($responseFields[2], appliedLayers);
                writer.writeDouble($responseFields[3], consumptionX);
                writer.writeDouble($responseFields[4], consumptionZ);
                writer.writeString($responseFields[5], materialId);
                writer.writeDouble($responseFields[6], pricePerUnit);
                writer.writeDouble($responseFields[7], productQuantity);
                writer.writeString($responseFields[8], providerId);
                writer.writeDouble($responseFields[9], unitCover);
            };
        }

        @NotNull
        @Override
        public String toString() {
            if ($toString == null) {
                $toString = "Item{"
                        + "__typename=" + __typename + ", "
                        + "id=" + id + ", "
                        + "appliedLayers=" + appliedLayers + ", "
                        + "consumptionX=" + consumptionX + ", "
                        + "consumptionZ=" + consumptionZ + ", "
                        + "materialId=" + materialId + ", "
                        + "pricePerUnit=" + pricePerUnit + ", "
                        + "productQuantity=" + productQuantity + ", "
                        + "providerId=" + providerId + ", "
                        + "unitCover=" + unitCover
                        + "}";
            }
            return $toString;
        }

        @Override
        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (o instanceof Item) {
                Item that = (Item) o;
                return this.__typename.equals(that.__typename)
                        && ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
                        && ((this.appliedLayers == null) ? (that.appliedLayers == null) : this.appliedLayers.equals(that.appliedLayers))
                        && ((this.consumptionX == null) ? (that.consumptionX == null) : this.consumptionX.equals(that.consumptionX))
                        && ((this.consumptionZ == null) ? (that.consumptionZ == null) : this.consumptionZ.equals(that.consumptionZ))
                        && ((this.materialId == null) ? (that.materialId == null) : this.materialId.equals(that.materialId))
                        && ((this.pricePerUnit == null) ? (that.pricePerUnit == null) : this.pricePerUnit.equals(that.pricePerUnit))
                        && ((this.productQuantity == null) ? (that.productQuantity == null) : this.productQuantity.equals(that.productQuantity))
                        && ((this.providerId == null) ? (that.providerId == null) : this.providerId.equals(that.providerId))
                        && ((this.unitCover == null) ? (that.unitCover == null) : this.unitCover.equals(that.unitCover));
            }
            return false;
        }

        @Override
        public int hashCode() {
            if (!$hashCodeMemoized) {
                int h = 1;
                h *= 1000003;
                h ^= __typename.hashCode();
                h *= 1000003;
                h ^= (id == null) ? 0 : id.hashCode();
                h *= 1000003;
                h ^= (appliedLayers == null) ? 0 : appliedLayers.hashCode();
                h *= 1000003;
                h ^= (consumptionX == null) ? 0 : consumptionX.hashCode();
                h *= 1000003;
                h ^= (consumptionZ == null) ? 0 : consumptionZ.hashCode();
                h *= 1000003;
                h ^= (materialId == null) ? 0 : materialId.hashCode();
                h *= 1000003;
                h ^= (pricePerUnit == null) ? 0 : pricePerUnit.hashCode();
                h *= 1000003;
                h ^= (productQuantity == null) ? 0 : productQuantity.hashCode();
                h *= 1000003;
                h ^= (providerId == null) ? 0 : providerId.hashCode();
                h *= 1000003;
                h ^= (unitCover == null) ? 0 : unitCover.hashCode();
                $hashCode = h;
                $hashCodeMemoized = true;
            }
            return $hashCode;
        }

        public static final class Mapper implements ResponseFieldMapper<Item> {
            @Override
            public Item map(ResponseReader reader) {
                final String __typename = reader.readString($responseFields[0]);
                final String id = reader.readString($responseFields[1]);
                final Double appliedLayers = reader.readDouble($responseFields[2]);
                final Double consumptionX = reader.readDouble($responseFields[3]);
                final Double consumptionZ = reader.readDouble($responseFields[4]);
                final String materialId = reader.readString($responseFields[5]);
                final Double pricePerUnit = reader.readDouble($responseFields[6]);
                final Double productQuantity = reader.readDouble($responseFields[7]);
                final String providerId = reader.readString($responseFields[8]);
                final Double unitCover = reader.readDouble($responseFields[9]);
                return new Item(__typename, id, appliedLayers, consumptionX, consumptionZ, materialId, pricePerUnit, productQuantity, providerId, unitCover);
            }
        }
    }
}
