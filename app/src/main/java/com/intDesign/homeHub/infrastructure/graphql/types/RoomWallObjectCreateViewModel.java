// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.intDesign.homeHub.infrastructure.graphql.types;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class RoomWallObjectCreateViewModel implements InputType {
    private final double lenght;

    private final double width;

    private final @NotNull
    String roomId;

    private final @NotNull
    RoomObjectType type;

    private final Input<RoomObjectType> number;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    RoomWallObjectCreateViewModel(double lenght, double width, @NotNull String roomId,
                                  @NotNull RoomObjectType type, Input<RoomObjectType> number) {
        this.lenght = lenght;
        this.width = width;
        this.roomId = roomId;
        this.type = type;
        this.number = number;
    }

    /**
     * The RoomWallObject Lenght
     */
    public double lenght() {
        return this.lenght;
    }

    /**
     * The RoomWallObject Width
     */
    public double width() {
        return this.width;
    }

    /**
     * The RoomWallObject id that contains this room
     */
    public @NotNull
    String roomId() {
        return this.roomId;
    }

    /**
     * The RoomWallObject id that contains this room
     */
    public @NotNull
    RoomObjectType type() {
        return this.type;
    }

    /**
     * The Number of objects in Room, default is 1
     */
    public @Nullable
    RoomObjectType number() {
        return this.number.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public InputFieldMarshaller marshaller() {
        return writer -> {
            writer.writeDouble("lenght", lenght);
            writer.writeDouble("width", width);
            writer.writeString("roomId", roomId);
            writer.writeString("type", type.rawValue());
            if (number.defined) {
                writer.writeString("number", number.value != null ? number.value.rawValue() : null);
            }
        };
    }

    @Override
    public int hashCode() {
        if (!$hashCodeMemoized) {
            int h = 1;
            h *= 1000003;
            h ^= Double.valueOf(lenght).hashCode();
            h *= 1000003;
            h ^= Double.valueOf(width).hashCode();
            h *= 1000003;
            h ^= roomId.hashCode();
            h *= 1000003;
            h ^= type.hashCode();
            h *= 1000003;
            h ^= number.hashCode();
            $hashCode = h;
            $hashCodeMemoized = true;
        }
        return $hashCode;
    }

    @Override
    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }
        if (o instanceof RoomWallObjectCreateViewModel) {
            RoomWallObjectCreateViewModel that = (RoomWallObjectCreateViewModel) o;
            return Double.doubleToLongBits(this.lenght) == Double.doubleToLongBits(that.lenght)
                    && Double.doubleToLongBits(this.width) == Double.doubleToLongBits(that.width)
                    && this.roomId.equals(that.roomId)
                    && this.type.equals(that.type)
                    && this.number.equals(that.number);
        }
        return false;
    }

    public static final class Builder {
        private double lenght;

        private double width;

        private @NotNull
        String roomId = "null";

        private @NotNull
        RoomObjectType type = RoomObjectType.safeValueOf("null");

        private Input<RoomObjectType> number = Input.absent();

        Builder() {
        }

        /**
         * The RoomWallObject Lenght
         */
        public Builder lenght(double lenght) {
            this.lenght = lenght;
            return this;
        }

        /**
         * The RoomWallObject Width
         */
        public Builder width(double width) {
            this.width = width;
            return this;
        }

        /**
         * The RoomWallObject id that contains this room
         */
        public Builder roomId(@NotNull String roomId) {
            this.roomId = roomId;
            return this;
        }

        /**
         * The RoomWallObject id that contains this room
         */
        public Builder type(@NotNull RoomObjectType type) {
            this.type = type;
            return this;
        }

        /**
         * The Number of objects in Room, default is 1
         */
        public Builder number(@Nullable RoomObjectType number) {
            this.number = Input.fromNullable(number);
            return this;
        }

        /**
         * The Number of objects in Room, default is 1
         */
        public Builder numberInput(@NotNull Input<RoomObjectType> number) {
            this.number = Utils.checkNotNull(number, "number == null");
            return this;
        }

        public RoomWallObjectCreateViewModel build() {
            Utils.checkNotNull(roomId, "roomId == null");
            Utils.checkNotNull(type, "type == null");
            return new RoomWallObjectCreateViewModel(lenght, width, roomId, type, number);
        }
    }
}
